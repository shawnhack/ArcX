<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans       
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd   
		http://www.springframework.org/schema/security     
		http://www.springframework.org/schema/security/spring-security-3.2.xsd">


	<security:global-method-security
		secured-annotations="enabled" />


	<!-- This is where we configure Spring-Security -->
	<security:http auto-config="true" use-expressions="true">

		<!-- Restrict URLs based on role -->
		<security:intercept-url pattern="/"
			access="permitAll" />
		<security:intercept-url pattern="/login*"
			access="permitAll" />
		<security:intercept-url pattern="/logoutSuccess*"
			access="permitAll" />
		<security:intercept-url pattern="/register*"
			access="permitAll" />
		<security:intercept-url pattern="/_ah/admin/*"
			access="permitAll" />

		<security:intercept-url pattern="/**" access="isAuthenticated()" />


		<!-- Override default login and logout pages -->
		<security:form-login login-page="/login" default-target-url=""
			login-processing-url="/loginProcess" authentication-failure-url="/login?auth=error" />

		<security:logout invalidate-session="true" logout-url="/logout"
			logout-success-url="/login?auth=logout" />

	</security:http>


<!-- 	<security:authentication-manager alias="authenticationManager"> -->
<!-- 		<security:authentication-provider -->
<!-- 			ref="userAuthentication" /> -->
<!-- 	</security:authentication-manager> -->


	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="userService">
			<security:password-encoder ref="encoder" />
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<bean id="userService" class="com.bitmind.service.UserService"/>


</beans>